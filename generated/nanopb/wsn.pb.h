/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_WSN_WSN_PB_H_INCLUDED
#define PB_WSN_WSN_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _wsn_SensorData { 
    char sensor_id[4]; 
    int32_t temperature; /* multiplication of 10. so 38.7 degress == 387 */
    int32_t humidity; /* multiplication of 10. */
} wsn_SensorData;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define wsn_SensorData_init_default              {"", 0, 0}
#define wsn_SensorData_init_zero                 {"", 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define wsn_SensorData_sensor_id_tag             1
#define wsn_SensorData_temperature_tag           2
#define wsn_SensorData_humidity_tag              3

/* Struct field encoding specification for nanopb */
#define wsn_SensorData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   sensor_id,         1) \
X(a, STATIC,   SINGULAR, INT32,    temperature,       2) \
X(a, STATIC,   SINGULAR, INT32,    humidity,          3)
#define wsn_SensorData_CALLBACK NULL
#define wsn_SensorData_DEFAULT NULL

extern const pb_msgdesc_t wsn_SensorData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define wsn_SensorData_fields &wsn_SensorData_msg

/* Maximum encoded size of messages (where known) */
#define wsn_SensorData_size                      27

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
